package rnikolaus.md5summer;

import java.io.PrintStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author rapnik
 */
public class CompareChecksumGui extends javax.swing.JFrame {
    private Map<String, String> result1;
    private Map<String, String> result2;

    /**
     * Creates new form CreateChecksumGui
     */
    public CompareChecksumGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        result1TextField = new javax.swing.JTextField();
        result1Button = new javax.swing.JButton();
        result2TextField = new javax.swing.JTextField();
        result2Button = new javax.swing.JButton();
        changedButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        addedButton = new javax.swing.JButton();
        deletedButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        result1TextField.setEditable(false);

        result1Button.setText("Result 1");
        result1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result1ButtonActionPerformed(evt);
            }
        });

        result2TextField.setEditable(false);

        result2Button.setText("Result 2");
        result2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result2ButtonActionPerformed(evt);
            }
        });

        changedButton.setText("Show changed");
        changedButton.setEnabled(false);
        changedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changedButtonActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Consolas", 0, 10)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        addedButton.setText("Show added");
        addedButton.setEnabled(false);
        addedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addedButtonActionPerformed(evt);
            }
        });

        deletedButton.setText("Show deleted");
        deletedButton.setEnabled(false);
        deletedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(changedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deletedButton)
                        .addGap(18, 18, 18)
                        .addComponent(addedButton)
                        .addGap(194, 194, 194))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(result1TextField)
                            .addComponent(result2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(result1Button))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(result2Button)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(result1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(result1Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(result2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(result2Button))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changedButton)
                            .addComponent(deletedButton)))
                    .addComponent(addedButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void result1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result1ButtonActionPerformed
        handleFileButton(result1TextField);
    }//GEN-LAST:event_result1ButtonActionPerformed

    private void result2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result2ButtonActionPerformed
        handleFileButton(result2TextField);
    }//GEN-LAST:event_result2ButtonActionPerformed

    private void handleFileButton(JTextField textfield)  {
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter f = new FileNameExtensionFilter("MD5 Files", "md5");
        fc.setFileFilter(f);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            Path file = fc.getSelectedFile().toPath();
            if (!Files.exists(file)) {
                JOptionPane.showMessageDialog(this, "File "+file+"doesn't exists", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                textfield.setText(file.toAbsolutePath().toString());
            }
        }
        checkRunButtonEnabled();
    }

    private void checkRunButtonEnabled() {
        String s1 = result1TextField.getText();
        String s2 = result2TextField.getText();
        if (s1 != null && s2 != null && !s1.isEmpty() && !s2.isEmpty()){
            changedButton.setEnabled(true);
            addedButton.setEnabled(true);
            deletedButton.setEnabled(true);
            
        }else{
            changedButton.setEnabled(false);
            addedButton.setEnabled(false);
            deletedButton.setEnabled(false);
            
        }
    }

    private void changedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changedButtonActionPerformed
        changedButton.setEnabled(false);
        loadResults();
        jTextArea1.setText(null);
        try (PrintStream out = new PrintStream(new TextAreaOutputStream(jTextArea1))) {
            for (Map.Entry<String,String> e:HashCodeCalculatorUtils.getChanged(result1, result2).entrySet()){
                out.println(e.getKey());
            }
        }
        changedButton.setEnabled(true);

    }//GEN-LAST:event_changedButtonActionPerformed

    private void loadResults() {
        String s1 = result1TextField.getText();
        String s2 = result2TextField.getText();
        
        if (s1 != null && s2 != null && !s1.isEmpty() && !s2.isEmpty()) {
            
            PrintStream out = new PrintStream(new TextAreaOutputStream(jTextArea1));
            try{
                result1 = HashCodeCalculatorUtils.readMap(Paths.get(s1));
                result2 = HashCodeCalculatorUtils.readMap(Paths.get(s2));
            }catch(Exception ex){
                out.println(ex);
            }
            
        }
    }

    private void addedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addedButtonActionPerformed
        addedButton.setEnabled(false);
        loadResults();
        jTextArea1.setText(null);
        try (PrintStream out = new PrintStream(new TextAreaOutputStream(jTextArea1))) {
            for (Map.Entry<String,String> e:HashCodeCalculatorUtils.getCreated(result1, result2).entrySet()){
                out.println(e.getKey());
            }
        }
        addedButton.setEnabled(true);
    }//GEN-LAST:event_addedButtonActionPerformed

    private void deletedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedButtonActionPerformed
        deletedButton.setEnabled(false);
        loadResults();
        jTextArea1.setText(null);
        try (PrintStream out = new PrintStream(new TextAreaOutputStream(jTextArea1))) {
            for (Map.Entry<String,String> e:HashCodeCalculatorUtils.getDeleted(result1, result2).entrySet()){
                out.println(e.getKey());
            }
        }
        deletedButton.setEnabled(true);
    }//GEN-LAST:event_deletedButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompareChecksumGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompareChecksumGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompareChecksumGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompareChecksumGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompareChecksumGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addedButton;
    private javax.swing.JButton changedButton;
    private javax.swing.JButton deletedButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton result1Button;
    private javax.swing.JTextField result1TextField;
    private javax.swing.JButton result2Button;
    private javax.swing.JTextField result2TextField;
    // End of variables declaration//GEN-END:variables
}
